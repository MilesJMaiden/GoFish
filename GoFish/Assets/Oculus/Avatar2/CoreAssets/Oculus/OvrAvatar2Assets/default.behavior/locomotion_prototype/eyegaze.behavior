{
    "graphs": [
        {
            "name": "main",
            "type": "dataflow",
            "inputs": [
                {
                    "type": "pose",
                    "name": "inPose3P",
                    "defaultLink": "locomotion_prototype/state_machine:pose"
                }
            ],
            "outputs": [
                {
                    "type": "pose",
                    "name": "pose"
                }
            ],
            "nodes": [
                {
                    "name": "eyeGazeHorizontal",
                    "type": "getDynamicStoreValueFloat",
                    "key": "locomotion_prototype_EyeGazeHorizontalOffset"
                },
                {
                    "name": "eyeGazeVertical",
                    "type": "getDynamicStoreValueFloat",
                    "key": "locomotion_prototype_EyeGazeVerticalOffset"
                },
                {
                    "name": "LeftEye_setTransformJoint",
                    "type": "setJointTransform",
                    "jointName": "RTRig_L_Eye",
                    "applyAsOffset": true,
                    "coordinateSpace": "local"
                },
                {
                    "name": "RightEye_setTransformJoint",
                    "type": "setJointTransform",
                    "jointName": "RTRig_R_Eye",
                    "applyAsOffset": true,
                    "coordinateSpace": "local"
                },
                {
                    "name": "eye_rot_makeVec3",
                    "type": "makeVec3"
                },
                {
                    "name": "eye_eulerToQuat",
                    "type": "eulerToQuat"
                },
                {
                    "name": "eye_makeTransform",
                    "type": "makeTransform"
                },
                {
                    "name": "eye_rot_makeVec3R",
                    "type": "makeVec3"
                },
                {
                    "name": "eye_eulerToQuatR",
                    "type": "eulerToQuat"
                },
                {
                    "name": "eye_makeTransformR",
                    "type": "makeTransform"
                },
                {
                    "name": "eyeHorizontalConstDegrees",
                    "type": "constFloat",
                    "value": 0.0
                },
                {
                    "name": "eyeL_degtoRad",
                    "type": "mathExpression",
                    "expression": "eyeHorizontalConstDegrees * (3.14159/180)",
                    "inputsSize": 1
                },
                {
                    "name": "eyeVerticalConstDegrees",
                    "type": "constFloat",
                    "value": 0.0
                },
                {
                    "name": "eyeL_degtoRadV",
                    "type": "mathExpression",
                    "expression": "eyeVerticalConstDegrees * (3.14159/180)",
                    "inputsSize": 1
                }
            ],
            "links": [
                [
                    "eyeGazeHorizontal",
                    "eyeL_degtoRad:var[eyeHorizontalConstDegrees]"
                ],
                [
                    "eyeGazeVertical",
                    "eyeL_degtoRadV:var[eyeVerticalConstDegrees]"
                ],
                [
                    "eyeL_degtoRad:value",
                    "eye_rot_makeVec3:inputX"
                ],
                [
                    "eyeL_degtoRad:value",
                    "eye_rot_makeVec3R:inputX"
                ],
                [
                    "eyeL_degtoRadV:value",
                    "eye_rot_makeVec3:inputY"
                ],
                [
                    "eyeL_degtoRadV:value",
                    "eye_rot_makeVec3R:inputY"
                ],
                [
                    "eye_rot_makeVec3:outputVec3",
                    "eye_eulerToQuat:inputEuler"
                ],
                [
                    "eye_eulerToQuat:outputQuat",
                    "eye_makeTransform:rotation"
                ],
                [
                    "eye_rot_makeVec3R:outputVec3",
                    "eye_eulerToQuatR:inputEuler"
                ],
                [
                    "eye_eulerToQuatR:outputQuat",
                    "eye_makeTransformR:rotation"
                ],
                [
                    "eye_makeTransform:transform",
                    "LeftEye_setTransformJoint:inputTransform"
                ],
                [
                    "eye_makeTransformR:transform",
                    "RightEye_setTransformJoint:inputTransform"
                ],
                [
                    ":inPose3P",
                    "LeftEye_setTransformJoint:inputPose"
                ],
                [
                    "LeftEye_setTransformJoint:outputPose",
                    "RightEye_setTransformJoint:inputPose"
                ],
                [
                    "RightEye_setTransformJoint:outputPose",
                    ":pose"
                ]
            ]
        }
    ]
}